{"ast":null,"code":"import _toConsumableArray from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/andrew/\\u0421\\u0442\\u0456\\u043B\\u044C\\u043D\\u0438\\u0446\\u044F/react/src/components/tick/controls.js\";\nimport React, { Component } from 'react';\nimport Screen from './screen';\n\nvar Controls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Controls, _Component);\n\n  function Controls() {\n    var _this;\n\n    _classCallCheck(this, Controls);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Controls).call(this));\n    _this.state = {\n      tick: 0,\n      items: []\n    };\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Controls, [{\n    key: \"incrementTick\",\n    value: function incrementTick() {\n      var _this2 = this;\n\n      this.setState({\n        tick: this.state.tick + 1\n      }, function () {\n        if (_this2.state.tick % 5 === 0) {\n          var newItem = _this2.state.tick;\n\n          _this2.setState({\n            items: _toConsumableArray(_this2.state.items).concat([newItem])\n          });\n        }\n      });\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function deleteItem(id) {\n      console.log(id);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      this.timerId = setInterval(function () {\n        _this3.incrementTick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerId);\n      console.log('unmount');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var allItems = this.state.items.map(function (elem, index) {\n        return React.createElement(Screen, {\n          key: index,\n          handler: _this4.deleteItem,\n          item: elem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.tick), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, allItems));\n    }\n  }]);\n\n  return Controls;\n}(Component);\n\nexport default Controls;","map":{"version":3,"sources":["/home/andrew/Стільниця/react/src/components/tick/controls.js"],"names":["React","Component","Screen","Controls","state","tick","items","deleteItem","bind","setState","newItem","id","console","log","timerId","setInterval","incrementTick","clearInterval","allItems","map","elem","index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAGMC,Q;;;;;AACF,sBAAa;AAAA;;AAAA;;AACT;AAGA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AATS;AAUZ;;;;oCAEc;AAAA;;AACX,WAAKC,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkB;AADd,OAAd,EAEE,YAAI;AACF,YAAG,MAAI,CAACD,KAAL,CAAWC,IAAX,GAAkB,CAAlB,KAAwB,CAA3B,EAA8B;AAC1B,cAAIK,OAAO,GAAG,MAAI,CAACN,KAAL,CAAWC,IAAzB;;AACA,UAAA,MAAI,CAACI,QAAL,CAAc;AAACH,YAAAA,KAAK,qBAAM,MAAI,CAACF,KAAL,CAAWE,KAAjB,UAAwBI,OAAxB;AAAN,WAAd;AACH;AACJ,OAPD;AAQH;;;+BAEUC,E,EAAG;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH;;;yCAEmB;AAAA;;AAChB,WAAKG,OAAL,GAAeC,WAAW,CAAC,YAAK;AAC5B,QAAA,MAAI,CAACC,aAAL;AACH,OAFyB,EAExB,IAFwB,CAA1B;AAGH;;;2CAEqB;AAClBC,MAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;;6BAEO;AAAA;;AACJ,UAAMK,QAAQ,GAAG,KAAKd,KAAL,CAAWE,KAAX,CAAiBa,GAAjB,CAAsB,UAACC,IAAD,EAAOC,KAAP,EAAgB;AACnD,eAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,OAAO,EAAE,MAAI,CAACd,UAAlC;AAA8C,UAAA,IAAI,EAAEa,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFgB,CAAjB;AAGA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKhB,KAAL,CAAWC,IAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMa,QAAN,CAFJ,CADJ;AAMH;;;;EAjDkBjB,S;;AAoDvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Screen from './screen';\n\n\nclass Controls extends Component {\n    constructor(){\n        super();\n\n\n        this.state = {\n            tick: 0,\n            items: []\n        }\n\n        this.deleteItem = this.deleteItem.bind(this);\n    }\n\n    incrementTick(){\n        this.setState({\n            tick: this.state.tick + 1\n        },()=>{\n            if(this.state.tick % 5 === 0 ){\n                let newItem = this.state.tick;\n                this.setState({items: [...this.state.items, newItem]})\n            }\n        });\n    }\n\n    deleteItem(id){\n        console.log(id)\n    }\n\n    componentWillMount(){\n        this.timerId = setInterval(()=> {\n            this.incrementTick();\n        },1000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n        console.log('unmount');\n    }\n\n    render(){\n        const allItems = this.state.items.map( (elem, index) =>{\n            return <Screen key={index} handler={this.deleteItem} item={elem} />\n        });\n        return(\n            <div>\n                <h1>{ this.state.tick }</h1>\n                <ul>{ allItems }</ul>\n            </div>\n        )\n    }\n}\n\nexport default Controls;"]},"metadata":{},"sourceType":"module"}